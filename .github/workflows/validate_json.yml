name: Validate config.json

on:
  pull_request:
    branches:
      - main
    paths:
      - 'config.dev.json'
      - 'config.prod.json'
      - '/config/local_json.go'

permissions:
  pull-requests: write
  contents: read

jobs:
  validate-json:
    runs-on: ubuntu-latest

    steps:
    - name: Disable debug logging
      run: echo "ACTIONS_STEP_DEBUG=false" >> $GITHUB_ENV

    - name: Checkout code
      uses: actions/checkout@v3
      with:
        fetch-depth: 0  

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.20'

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.x'

    - name: Generate JSON schema
      run: |
        echo "üöÄ Running Go code to generate schema.json..."
        if go run schema/schema.go; then
          echo "‚úÖ JSON schema generated successfully!"
        else
          echo "‚ùå Failed to generate JSON schema."
          exit 1
        fi

    - name: Install check-jsonschema
      run: |
        echo "üì¶ Installing check-jsonschema..."
        if pip install check-jsonschema > /dev/null 2>&1; then
          echo "‚úÖ check-jsonschema installed!"
        else
          echo "‚ùå Failed to install check-jsonschema."
          exit 1
        fi

    - name: Validate config files
      run: |
        echo "üîç Validating config files (.json) against schema..."
        check-jsonschema --schemafile=schema.json config.dev.json > validation_output.txt
        cat validation_output.txt
        if [ $? -eq 0 ]; then
          echo "‚úÖ Validation successful! The config files are correct. üéâ"
        else
          echo "‚ùå Validation failed! Please review the config files."
          exit 1
        fi
          
    - name: Upload validation result
      uses: actions/upload-artifact@v3
      with:
        name: validation-result
        path: validation_output.txt

    - name: Add validation result as comment
      uses: marocchino/sticky-pull-request-comment@v2
      with:
        path: validation_output.txt
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
